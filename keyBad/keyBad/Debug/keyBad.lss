
keyBad.elf:     file format elf32-avr

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .text         000006d0  00000000  00000000  00000074  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  1 .data         00000010  00800060  000006d0  00000744  2**0
                  CONTENTS, ALLOC, LOAD, DATA
  2 .comment      00000030  00000000  00000000  00000754  2**0
                  CONTENTS, READONLY
  3 .note.gnu.avr.deviceinfo 0000003c  00000000  00000000  00000784  2**2
                  CONTENTS, READONLY
  4 .debug_aranges 00000110  00000000  00000000  000007c0  2**0
                  CONTENTS, READONLY, DEBUGGING
  5 .debug_info   00001286  00000000  00000000  000008d0  2**0
                  CONTENTS, READONLY, DEBUGGING
  6 .debug_abbrev 000008c6  00000000  00000000  00001b56  2**0
                  CONTENTS, READONLY, DEBUGGING
  7 .debug_line   00000a5d  00000000  00000000  0000241c  2**0
                  CONTENTS, READONLY, DEBUGGING
  8 .debug_frame  000001e0  00000000  00000000  00002e7c  2**2
                  CONTENTS, READONLY, DEBUGGING
  9 .debug_str    0000047f  00000000  00000000  0000305c  2**0
                  CONTENTS, READONLY, DEBUGGING
 10 .debug_loc    00000cb5  00000000  00000000  000034db  2**0
                  CONTENTS, READONLY, DEBUGGING
 11 .debug_ranges 000000d0  00000000  00000000  00004190  2**0
                  CONTENTS, READONLY, DEBUGGING

Disassembly of section .text:

00000000 <__vectors>:
   0:	0c 94 2a 00 	jmp	0x54	; 0x54 <__ctors_end>
   4:	0c 94 3f 00 	jmp	0x7e	; 0x7e <__bad_interrupt>
   8:	0c 94 3f 00 	jmp	0x7e	; 0x7e <__bad_interrupt>
   c:	0c 94 3f 00 	jmp	0x7e	; 0x7e <__bad_interrupt>
  10:	0c 94 3f 00 	jmp	0x7e	; 0x7e <__bad_interrupt>
  14:	0c 94 3f 00 	jmp	0x7e	; 0x7e <__bad_interrupt>
  18:	0c 94 3f 00 	jmp	0x7e	; 0x7e <__bad_interrupt>
  1c:	0c 94 3f 00 	jmp	0x7e	; 0x7e <__bad_interrupt>
  20:	0c 94 3f 00 	jmp	0x7e	; 0x7e <__bad_interrupt>
  24:	0c 94 3f 00 	jmp	0x7e	; 0x7e <__bad_interrupt>
  28:	0c 94 3f 00 	jmp	0x7e	; 0x7e <__bad_interrupt>
  2c:	0c 94 3f 00 	jmp	0x7e	; 0x7e <__bad_interrupt>
  30:	0c 94 3f 00 	jmp	0x7e	; 0x7e <__bad_interrupt>
  34:	0c 94 3f 00 	jmp	0x7e	; 0x7e <__bad_interrupt>
  38:	0c 94 3f 00 	jmp	0x7e	; 0x7e <__bad_interrupt>
  3c:	0c 94 3f 00 	jmp	0x7e	; 0x7e <__bad_interrupt>
  40:	0c 94 3f 00 	jmp	0x7e	; 0x7e <__bad_interrupt>
  44:	0c 94 3f 00 	jmp	0x7e	; 0x7e <__bad_interrupt>
  48:	0c 94 3f 00 	jmp	0x7e	; 0x7e <__bad_interrupt>
  4c:	0c 94 3f 00 	jmp	0x7e	; 0x7e <__bad_interrupt>
  50:	0c 94 3f 00 	jmp	0x7e	; 0x7e <__bad_interrupt>

00000054 <__ctors_end>:
  54:	11 24       	eor	r1, r1
  56:	1f be       	out	0x3f, r1	; 63
  58:	cf e5       	ldi	r28, 0x5F	; 95
  5a:	d8 e0       	ldi	r29, 0x08	; 8
  5c:	de bf       	out	0x3e, r29	; 62
  5e:	cd bf       	out	0x3d, r28	; 61

00000060 <__do_copy_data>:
  60:	10 e0       	ldi	r17, 0x00	; 0
  62:	a0 e6       	ldi	r26, 0x60	; 96
  64:	b0 e0       	ldi	r27, 0x00	; 0
  66:	e0 ed       	ldi	r30, 0xD0	; 208
  68:	f6 e0       	ldi	r31, 0x06	; 6
  6a:	02 c0       	rjmp	.+4      	; 0x70 <__do_copy_data+0x10>
  6c:	05 90       	lpm	r0, Z+
  6e:	0d 92       	st	X+, r0
  70:	a0 37       	cpi	r26, 0x70	; 112
  72:	b1 07       	cpc	r27, r17
  74:	d9 f7       	brne	.-10     	; 0x6c <__do_copy_data+0xc>
  76:	0e 94 4d 03 	call	0x69a	; 0x69a <main>
  7a:	0c 94 66 03 	jmp	0x6cc	; 0x6cc <_exit>

0000007e <__bad_interrupt>:
  7e:	0c 94 00 00 	jmp	0	; 0x0 <__vectors>

00000082 <DIO_set_bit_dir>:
			case 'D':
				value=PIND;
			break;
}
	return value;
}
  82:	82 34       	cpi	r24, 0x42	; 66
  84:	19 f1       	breq	.+70     	; 0xcc <DIO_set_bit_dir+0x4a>
  86:	18 f4       	brcc	.+6      	; 0x8e <DIO_set_bit_dir+0xc>
  88:	81 34       	cpi	r24, 0x41	; 65
  8a:	39 f0       	breq	.+14     	; 0x9a <DIO_set_bit_dir+0x18>
  8c:	08 95       	ret
  8e:	83 34       	cpi	r24, 0x43	; 67
  90:	b1 f1       	breq	.+108    	; 0xfe <DIO_set_bit_dir+0x7c>
  92:	84 34       	cpi	r24, 0x44	; 68
  94:	09 f4       	brne	.+2      	; 0x98 <DIO_set_bit_dir+0x16>
  96:	4c c0       	rjmp	.+152    	; 0x130 <DIO_set_bit_dir+0xae>
  98:	08 95       	ret
  9a:	41 30       	cpi	r20, 0x01	; 1
  9c:	59 f4       	brne	.+22     	; 0xb4 <DIO_set_bit_dir+0x32>
  9e:	2a b3       	in	r18, 0x1a	; 26
  a0:	81 e0       	ldi	r24, 0x01	; 1
  a2:	90 e0       	ldi	r25, 0x00	; 0
  a4:	02 c0       	rjmp	.+4      	; 0xaa <DIO_set_bit_dir+0x28>
  a6:	88 0f       	add	r24, r24
  a8:	99 1f       	adc	r25, r25
  aa:	6a 95       	dec	r22
  ac:	e2 f7       	brpl	.-8      	; 0xa6 <DIO_set_bit_dir+0x24>
  ae:	82 2b       	or	r24, r18
  b0:	8a bb       	out	0x1a, r24	; 26
  b2:	08 95       	ret
  b4:	2a b3       	in	r18, 0x1a	; 26
  b6:	81 e0       	ldi	r24, 0x01	; 1
  b8:	90 e0       	ldi	r25, 0x00	; 0
  ba:	02 c0       	rjmp	.+4      	; 0xc0 <DIO_set_bit_dir+0x3e>
  bc:	88 0f       	add	r24, r24
  be:	99 1f       	adc	r25, r25
  c0:	6a 95       	dec	r22
  c2:	e2 f7       	brpl	.-8      	; 0xbc <DIO_set_bit_dir+0x3a>
  c4:	80 95       	com	r24
  c6:	82 23       	and	r24, r18
  c8:	8a bb       	out	0x1a, r24	; 26
  ca:	08 95       	ret
  cc:	41 30       	cpi	r20, 0x01	; 1
  ce:	59 f4       	brne	.+22     	; 0xe6 <DIO_set_bit_dir+0x64>
  d0:	27 b3       	in	r18, 0x17	; 23
  d2:	81 e0       	ldi	r24, 0x01	; 1
  d4:	90 e0       	ldi	r25, 0x00	; 0
  d6:	02 c0       	rjmp	.+4      	; 0xdc <DIO_set_bit_dir+0x5a>
  d8:	88 0f       	add	r24, r24
  da:	99 1f       	adc	r25, r25
  dc:	6a 95       	dec	r22
  de:	e2 f7       	brpl	.-8      	; 0xd8 <DIO_set_bit_dir+0x56>
  e0:	82 2b       	or	r24, r18
  e2:	87 bb       	out	0x17, r24	; 23
  e4:	08 95       	ret
  e6:	27 b3       	in	r18, 0x17	; 23
  e8:	81 e0       	ldi	r24, 0x01	; 1
  ea:	90 e0       	ldi	r25, 0x00	; 0
  ec:	02 c0       	rjmp	.+4      	; 0xf2 <DIO_set_bit_dir+0x70>
  ee:	88 0f       	add	r24, r24
  f0:	99 1f       	adc	r25, r25
  f2:	6a 95       	dec	r22
  f4:	e2 f7       	brpl	.-8      	; 0xee <DIO_set_bit_dir+0x6c>
  f6:	80 95       	com	r24
  f8:	82 23       	and	r24, r18
  fa:	87 bb       	out	0x17, r24	; 23
  fc:	08 95       	ret
  fe:	41 30       	cpi	r20, 0x01	; 1
 100:	59 f4       	brne	.+22     	; 0x118 <DIO_set_bit_dir+0x96>
 102:	24 b3       	in	r18, 0x14	; 20
 104:	81 e0       	ldi	r24, 0x01	; 1
 106:	90 e0       	ldi	r25, 0x00	; 0
 108:	02 c0       	rjmp	.+4      	; 0x10e <DIO_set_bit_dir+0x8c>
 10a:	88 0f       	add	r24, r24
 10c:	99 1f       	adc	r25, r25
 10e:	6a 95       	dec	r22
 110:	e2 f7       	brpl	.-8      	; 0x10a <DIO_set_bit_dir+0x88>
 112:	82 2b       	or	r24, r18
 114:	84 bb       	out	0x14, r24	; 20
 116:	08 95       	ret
 118:	24 b3       	in	r18, 0x14	; 20
 11a:	81 e0       	ldi	r24, 0x01	; 1
 11c:	90 e0       	ldi	r25, 0x00	; 0
 11e:	02 c0       	rjmp	.+4      	; 0x124 <DIO_set_bit_dir+0xa2>
 120:	88 0f       	add	r24, r24
 122:	99 1f       	adc	r25, r25
 124:	6a 95       	dec	r22
 126:	e2 f7       	brpl	.-8      	; 0x120 <DIO_set_bit_dir+0x9e>
 128:	80 95       	com	r24
 12a:	82 23       	and	r24, r18
 12c:	84 bb       	out	0x14, r24	; 20
 12e:	08 95       	ret
 130:	41 30       	cpi	r20, 0x01	; 1
 132:	59 f4       	brne	.+22     	; 0x14a <DIO_set_bit_dir+0xc8>
 134:	21 b3       	in	r18, 0x11	; 17
 136:	81 e0       	ldi	r24, 0x01	; 1
 138:	90 e0       	ldi	r25, 0x00	; 0
 13a:	02 c0       	rjmp	.+4      	; 0x140 <DIO_set_bit_dir+0xbe>
 13c:	88 0f       	add	r24, r24
 13e:	99 1f       	adc	r25, r25
 140:	6a 95       	dec	r22
 142:	e2 f7       	brpl	.-8      	; 0x13c <DIO_set_bit_dir+0xba>
 144:	82 2b       	or	r24, r18
 146:	81 bb       	out	0x11, r24	; 17
 148:	08 95       	ret
 14a:	21 b3       	in	r18, 0x11	; 17
 14c:	81 e0       	ldi	r24, 0x01	; 1
 14e:	90 e0       	ldi	r25, 0x00	; 0
 150:	02 c0       	rjmp	.+4      	; 0x156 <DIO_set_bit_dir+0xd4>
 152:	88 0f       	add	r24, r24
 154:	99 1f       	adc	r25, r25
 156:	6a 95       	dec	r22
 158:	e2 f7       	brpl	.-8      	; 0x152 <DIO_set_bit_dir+0xd0>
 15a:	80 95       	com	r24
 15c:	82 23       	and	r24, r18
 15e:	81 bb       	out	0x11, r24	; 17
 160:	08 95       	ret

00000162 <DIO_read_bit>:
 162:	82 34       	cpi	r24, 0x42	; 66
 164:	f9 f0       	breq	.+62     	; 0x1a4 <DIO_read_bit+0x42>
 166:	18 f4       	brcc	.+6      	; 0x16e <DIO_read_bit+0xc>
 168:	81 34       	cpi	r24, 0x41	; 65
 16a:	39 f0       	breq	.+14     	; 0x17a <DIO_read_bit+0x18>
 16c:	59 c0       	rjmp	.+178    	; 0x220 <DIO_read_bit+0xbe>
 16e:	83 34       	cpi	r24, 0x43	; 67
 170:	71 f1       	breq	.+92     	; 0x1ce <DIO_read_bit+0x6c>
 172:	84 34       	cpi	r24, 0x44	; 68
 174:	09 f4       	brne	.+2      	; 0x178 <DIO_read_bit+0x16>
 176:	40 c0       	rjmp	.+128    	; 0x1f8 <DIO_read_bit+0x96>
 178:	53 c0       	rjmp	.+166    	; 0x220 <DIO_read_bit+0xbe>
 17a:	49 b3       	in	r20, 0x19	; 25
 17c:	81 e0       	ldi	r24, 0x01	; 1
 17e:	90 e0       	ldi	r25, 0x00	; 0
 180:	9c 01       	movw	r18, r24
 182:	06 2e       	mov	r0, r22
 184:	02 c0       	rjmp	.+4      	; 0x18a <DIO_read_bit+0x28>
 186:	22 0f       	add	r18, r18
 188:	33 1f       	adc	r19, r19
 18a:	0a 94       	dec	r0
 18c:	e2 f7       	brpl	.-8      	; 0x186 <DIO_read_bit+0x24>
 18e:	84 2f       	mov	r24, r20
 190:	90 e0       	ldi	r25, 0x00	; 0
 192:	82 23       	and	r24, r18
 194:	93 23       	and	r25, r19
 196:	02 c0       	rjmp	.+4      	; 0x19c <DIO_read_bit+0x3a>
 198:	96 95       	lsr	r25
 19a:	87 95       	ror	r24
 19c:	6a 95       	dec	r22
 19e:	e2 f7       	brpl	.-8      	; 0x198 <DIO_read_bit+0x36>
 1a0:	98 2f       	mov	r25, r24
 1a2:	3e c0       	rjmp	.+124    	; 0x220 <DIO_read_bit+0xbe>
 1a4:	46 b3       	in	r20, 0x16	; 22
 1a6:	81 e0       	ldi	r24, 0x01	; 1
 1a8:	90 e0       	ldi	r25, 0x00	; 0
 1aa:	9c 01       	movw	r18, r24
 1ac:	06 2e       	mov	r0, r22
 1ae:	02 c0       	rjmp	.+4      	; 0x1b4 <DIO_read_bit+0x52>
 1b0:	22 0f       	add	r18, r18
 1b2:	33 1f       	adc	r19, r19
 1b4:	0a 94       	dec	r0
 1b6:	e2 f7       	brpl	.-8      	; 0x1b0 <DIO_read_bit+0x4e>
 1b8:	84 2f       	mov	r24, r20
 1ba:	90 e0       	ldi	r25, 0x00	; 0
 1bc:	82 23       	and	r24, r18
 1be:	93 23       	and	r25, r19
 1c0:	02 c0       	rjmp	.+4      	; 0x1c6 <DIO_read_bit+0x64>
 1c2:	96 95       	lsr	r25
 1c4:	87 95       	ror	r24
 1c6:	6a 95       	dec	r22
 1c8:	e2 f7       	brpl	.-8      	; 0x1c2 <DIO_read_bit+0x60>
 1ca:	98 2f       	mov	r25, r24
 1cc:	29 c0       	rjmp	.+82     	; 0x220 <DIO_read_bit+0xbe>
 1ce:	43 b3       	in	r20, 0x13	; 19
 1d0:	81 e0       	ldi	r24, 0x01	; 1
 1d2:	90 e0       	ldi	r25, 0x00	; 0
 1d4:	9c 01       	movw	r18, r24
 1d6:	06 2e       	mov	r0, r22
 1d8:	02 c0       	rjmp	.+4      	; 0x1de <DIO_read_bit+0x7c>
 1da:	22 0f       	add	r18, r18
 1dc:	33 1f       	adc	r19, r19
 1de:	0a 94       	dec	r0
 1e0:	e2 f7       	brpl	.-8      	; 0x1da <DIO_read_bit+0x78>
 1e2:	84 2f       	mov	r24, r20
 1e4:	90 e0       	ldi	r25, 0x00	; 0
 1e6:	82 23       	and	r24, r18
 1e8:	93 23       	and	r25, r19
 1ea:	02 c0       	rjmp	.+4      	; 0x1f0 <DIO_read_bit+0x8e>
 1ec:	96 95       	lsr	r25
 1ee:	87 95       	ror	r24
 1f0:	6a 95       	dec	r22
 1f2:	e2 f7       	brpl	.-8      	; 0x1ec <DIO_read_bit+0x8a>
 1f4:	98 2f       	mov	r25, r24
 1f6:	14 c0       	rjmp	.+40     	; 0x220 <DIO_read_bit+0xbe>
 1f8:	40 b3       	in	r20, 0x10	; 16
 1fa:	81 e0       	ldi	r24, 0x01	; 1
 1fc:	90 e0       	ldi	r25, 0x00	; 0
 1fe:	9c 01       	movw	r18, r24
 200:	06 2e       	mov	r0, r22
 202:	02 c0       	rjmp	.+4      	; 0x208 <DIO_read_bit+0xa6>
 204:	22 0f       	add	r18, r18
 206:	33 1f       	adc	r19, r19
 208:	0a 94       	dec	r0
 20a:	e2 f7       	brpl	.-8      	; 0x204 <DIO_read_bit+0xa2>
 20c:	84 2f       	mov	r24, r20
 20e:	90 e0       	ldi	r25, 0x00	; 0
 210:	82 23       	and	r24, r18
 212:	93 23       	and	r25, r19
 214:	02 c0       	rjmp	.+4      	; 0x21a <DIO_read_bit+0xb8>
 216:	96 95       	lsr	r25
 218:	87 95       	ror	r24
 21a:	6a 95       	dec	r22
 21c:	e2 f7       	brpl	.-8      	; 0x216 <DIO_read_bit+0xb4>
 21e:	98 2f       	mov	r25, r24
 220:	89 2f       	mov	r24, r25
 222:	08 95       	ret

00000224 <DIO_write_bit>:
 224:	82 34       	cpi	r24, 0x42	; 66
 226:	19 f1       	breq	.+70     	; 0x26e <DIO_write_bit+0x4a>
 228:	18 f4       	brcc	.+6      	; 0x230 <DIO_write_bit+0xc>
 22a:	81 34       	cpi	r24, 0x41	; 65
 22c:	39 f0       	breq	.+14     	; 0x23c <DIO_write_bit+0x18>
 22e:	08 95       	ret
 230:	83 34       	cpi	r24, 0x43	; 67
 232:	b1 f1       	breq	.+108    	; 0x2a0 <DIO_write_bit+0x7c>
 234:	84 34       	cpi	r24, 0x44	; 68
 236:	09 f4       	brne	.+2      	; 0x23a <DIO_write_bit+0x16>
 238:	4c c0       	rjmp	.+152    	; 0x2d2 <DIO_write_bit+0xae>
 23a:	08 95       	ret
 23c:	41 30       	cpi	r20, 0x01	; 1
 23e:	59 f4       	brne	.+22     	; 0x256 <DIO_write_bit+0x32>
 240:	2b b3       	in	r18, 0x1b	; 27
 242:	81 e0       	ldi	r24, 0x01	; 1
 244:	90 e0       	ldi	r25, 0x00	; 0
 246:	02 c0       	rjmp	.+4      	; 0x24c <DIO_write_bit+0x28>
 248:	88 0f       	add	r24, r24
 24a:	99 1f       	adc	r25, r25
 24c:	6a 95       	dec	r22
 24e:	e2 f7       	brpl	.-8      	; 0x248 <DIO_write_bit+0x24>
 250:	82 2b       	or	r24, r18
 252:	8b bb       	out	0x1b, r24	; 27
 254:	08 95       	ret
 256:	2b b3       	in	r18, 0x1b	; 27
 258:	81 e0       	ldi	r24, 0x01	; 1
 25a:	90 e0       	ldi	r25, 0x00	; 0
 25c:	02 c0       	rjmp	.+4      	; 0x262 <DIO_write_bit+0x3e>
 25e:	88 0f       	add	r24, r24
 260:	99 1f       	adc	r25, r25
 262:	6a 95       	dec	r22
 264:	e2 f7       	brpl	.-8      	; 0x25e <DIO_write_bit+0x3a>
 266:	80 95       	com	r24
 268:	82 23       	and	r24, r18
 26a:	8b bb       	out	0x1b, r24	; 27
 26c:	08 95       	ret
 26e:	41 30       	cpi	r20, 0x01	; 1
 270:	59 f4       	brne	.+22     	; 0x288 <DIO_write_bit+0x64>
 272:	28 b3       	in	r18, 0x18	; 24
 274:	81 e0       	ldi	r24, 0x01	; 1
 276:	90 e0       	ldi	r25, 0x00	; 0
 278:	02 c0       	rjmp	.+4      	; 0x27e <DIO_write_bit+0x5a>
 27a:	88 0f       	add	r24, r24
 27c:	99 1f       	adc	r25, r25
 27e:	6a 95       	dec	r22
 280:	e2 f7       	brpl	.-8      	; 0x27a <DIO_write_bit+0x56>
 282:	82 2b       	or	r24, r18
 284:	88 bb       	out	0x18, r24	; 24
 286:	08 95       	ret
 288:	28 b3       	in	r18, 0x18	; 24
 28a:	81 e0       	ldi	r24, 0x01	; 1
 28c:	90 e0       	ldi	r25, 0x00	; 0
 28e:	02 c0       	rjmp	.+4      	; 0x294 <DIO_write_bit+0x70>
 290:	88 0f       	add	r24, r24
 292:	99 1f       	adc	r25, r25
 294:	6a 95       	dec	r22
 296:	e2 f7       	brpl	.-8      	; 0x290 <DIO_write_bit+0x6c>
 298:	80 95       	com	r24
 29a:	82 23       	and	r24, r18
 29c:	88 bb       	out	0x18, r24	; 24
 29e:	08 95       	ret
 2a0:	41 30       	cpi	r20, 0x01	; 1
 2a2:	59 f4       	brne	.+22     	; 0x2ba <DIO_write_bit+0x96>
 2a4:	25 b3       	in	r18, 0x15	; 21
 2a6:	81 e0       	ldi	r24, 0x01	; 1
 2a8:	90 e0       	ldi	r25, 0x00	; 0
 2aa:	02 c0       	rjmp	.+4      	; 0x2b0 <DIO_write_bit+0x8c>
 2ac:	88 0f       	add	r24, r24
 2ae:	99 1f       	adc	r25, r25
 2b0:	6a 95       	dec	r22
 2b2:	e2 f7       	brpl	.-8      	; 0x2ac <DIO_write_bit+0x88>
 2b4:	82 2b       	or	r24, r18
 2b6:	85 bb       	out	0x15, r24	; 21
 2b8:	08 95       	ret
 2ba:	25 b3       	in	r18, 0x15	; 21
 2bc:	81 e0       	ldi	r24, 0x01	; 1
 2be:	90 e0       	ldi	r25, 0x00	; 0
 2c0:	02 c0       	rjmp	.+4      	; 0x2c6 <DIO_write_bit+0xa2>
 2c2:	88 0f       	add	r24, r24
 2c4:	99 1f       	adc	r25, r25
 2c6:	6a 95       	dec	r22
 2c8:	e2 f7       	brpl	.-8      	; 0x2c2 <DIO_write_bit+0x9e>
 2ca:	80 95       	com	r24
 2cc:	82 23       	and	r24, r18
 2ce:	85 bb       	out	0x15, r24	; 21
 2d0:	08 95       	ret
 2d2:	41 30       	cpi	r20, 0x01	; 1
 2d4:	59 f4       	brne	.+22     	; 0x2ec <DIO_write_bit+0xc8>
 2d6:	22 b3       	in	r18, 0x12	; 18
 2d8:	81 e0       	ldi	r24, 0x01	; 1
 2da:	90 e0       	ldi	r25, 0x00	; 0
 2dc:	02 c0       	rjmp	.+4      	; 0x2e2 <DIO_write_bit+0xbe>
 2de:	88 0f       	add	r24, r24
 2e0:	99 1f       	adc	r25, r25
 2e2:	6a 95       	dec	r22
 2e4:	e2 f7       	brpl	.-8      	; 0x2de <DIO_write_bit+0xba>
 2e6:	82 2b       	or	r24, r18
 2e8:	82 bb       	out	0x12, r24	; 18
 2ea:	08 95       	ret
 2ec:	22 b3       	in	r18, 0x12	; 18
 2ee:	81 e0       	ldi	r24, 0x01	; 1
 2f0:	90 e0       	ldi	r25, 0x00	; 0
 2f2:	02 c0       	rjmp	.+4      	; 0x2f8 <DIO_write_bit+0xd4>
 2f4:	88 0f       	add	r24, r24
 2f6:	99 1f       	adc	r25, r25
 2f8:	6a 95       	dec	r22
 2fa:	e2 f7       	brpl	.-8      	; 0x2f4 <DIO_write_bit+0xd0>
 2fc:	80 95       	com	r24
 2fe:	82 23       	and	r24, r18
 300:	82 bb       	out	0x12, r24	; 18
 302:	08 95       	ret

00000304 <DIO_set_port_dir>:
 304:	82 34       	cpi	r24, 0x42	; 66
 306:	81 f0       	breq	.+32     	; 0x328 <DIO_set_port_dir+0x24>
 308:	18 f4       	brcc	.+6      	; 0x310 <DIO_set_port_dir+0xc>
 30a:	81 34       	cpi	r24, 0x41	; 65
 30c:	31 f0       	breq	.+12     	; 0x31a <DIO_set_port_dir+0x16>
 30e:	08 95       	ret
 310:	83 34       	cpi	r24, 0x43	; 67
 312:	89 f0       	breq	.+34     	; 0x336 <DIO_set_port_dir+0x32>
 314:	84 34       	cpi	r24, 0x44	; 68
 316:	b1 f0       	breq	.+44     	; 0x344 <DIO_set_port_dir+0x40>
 318:	08 95       	ret
 31a:	61 30       	cpi	r22, 0x01	; 1
 31c:	19 f4       	brne	.+6      	; 0x324 <DIO_set_port_dir+0x20>
 31e:	8f ef       	ldi	r24, 0xFF	; 255
 320:	8a bb       	out	0x1a, r24	; 26
 322:	08 95       	ret
 324:	1a ba       	out	0x1a, r1	; 26
 326:	08 95       	ret
 328:	61 30       	cpi	r22, 0x01	; 1
 32a:	19 f4       	brne	.+6      	; 0x332 <DIO_set_port_dir+0x2e>
 32c:	8f ef       	ldi	r24, 0xFF	; 255
 32e:	87 bb       	out	0x17, r24	; 23
 330:	08 95       	ret
 332:	17 ba       	out	0x17, r1	; 23
 334:	08 95       	ret
 336:	61 30       	cpi	r22, 0x01	; 1
 338:	19 f4       	brne	.+6      	; 0x340 <DIO_set_port_dir+0x3c>
 33a:	8f ef       	ldi	r24, 0xFF	; 255
 33c:	84 bb       	out	0x14, r24	; 20
 33e:	08 95       	ret
 340:	14 ba       	out	0x14, r1	; 20
 342:	08 95       	ret
 344:	61 30       	cpi	r22, 0x01	; 1
 346:	19 f4       	brne	.+6      	; 0x34e <DIO_set_port_dir+0x4a>
 348:	8f ef       	ldi	r24, 0xFF	; 255
 34a:	81 bb       	out	0x11, r24	; 17
 34c:	08 95       	ret
 34e:	11 ba       	out	0x11, r1	; 17
 350:	08 95       	ret

00000352 <DIO_write_port>:
 352:	82 34       	cpi	r24, 0x42	; 66
 354:	59 f0       	breq	.+22     	; 0x36c <DIO_write_port+0x1a>
 356:	18 f4       	brcc	.+6      	; 0x35e <DIO_write_port+0xc>
 358:	81 34       	cpi	r24, 0x41	; 65
 35a:	31 f0       	breq	.+12     	; 0x368 <DIO_write_port+0x16>
 35c:	08 95       	ret
 35e:	83 34       	cpi	r24, 0x43	; 67
 360:	39 f0       	breq	.+14     	; 0x370 <DIO_write_port+0x1e>
 362:	84 34       	cpi	r24, 0x44	; 68
 364:	39 f0       	breq	.+14     	; 0x374 <DIO_write_port+0x22>
 366:	08 95       	ret
 368:	6b bb       	out	0x1b, r22	; 27
 36a:	08 95       	ret
 36c:	68 bb       	out	0x18, r22	; 24
 36e:	08 95       	ret
 370:	65 bb       	out	0x15, r22	; 21
 372:	08 95       	ret
 374:	62 bb       	out	0x12, r22	; 18
 376:	08 95       	ret

00000378 <DIO_connect_pullup>:

void DIO_connect_pullup(unsigned char port,unsigned char bit,unsigned char connect){
	switch(port){
 378:	82 34       	cpi	r24, 0x42	; 66
 37a:	19 f1       	breq	.+70     	; 0x3c2 <DIO_connect_pullup+0x4a>
 37c:	18 f4       	brcc	.+6      	; 0x384 <DIO_connect_pullup+0xc>
 37e:	81 34       	cpi	r24, 0x41	; 65
 380:	39 f0       	breq	.+14     	; 0x390 <DIO_connect_pullup+0x18>
 382:	08 95       	ret
 384:	83 34       	cpi	r24, 0x43	; 67
 386:	b1 f1       	breq	.+108    	; 0x3f4 <DIO_connect_pullup+0x7c>
 388:	84 34       	cpi	r24, 0x44	; 68
 38a:	09 f4       	brne	.+2      	; 0x38e <DIO_connect_pullup+0x16>
 38c:	4c c0       	rjmp	.+152    	; 0x426 <__EEPROM_REGION_LENGTH__+0x26>
 38e:	08 95       	ret
		case 'A':
		if (connect==1){
 390:	41 30       	cpi	r20, 0x01	; 1
 392:	59 f4       	brne	.+22     	; 0x3aa <DIO_connect_pullup+0x32>
			SET_BIT(PORTA,bit);
 394:	2b b3       	in	r18, 0x1b	; 27
 396:	81 e0       	ldi	r24, 0x01	; 1
 398:	90 e0       	ldi	r25, 0x00	; 0
 39a:	02 c0       	rjmp	.+4      	; 0x3a0 <DIO_connect_pullup+0x28>
 39c:	88 0f       	add	r24, r24
 39e:	99 1f       	adc	r25, r25
 3a0:	6a 95       	dec	r22
 3a2:	e2 f7       	brpl	.-8      	; 0x39c <DIO_connect_pullup+0x24>
 3a4:	82 2b       	or	r24, r18
 3a6:	8b bb       	out	0x1b, r24	; 27
 3a8:	08 95       	ret
		}
		else{
			CLR_BIT(PORTA,bit);
 3aa:	2b b3       	in	r18, 0x1b	; 27
 3ac:	81 e0       	ldi	r24, 0x01	; 1
 3ae:	90 e0       	ldi	r25, 0x00	; 0
 3b0:	02 c0       	rjmp	.+4      	; 0x3b6 <DIO_connect_pullup+0x3e>
 3b2:	88 0f       	add	r24, r24
 3b4:	99 1f       	adc	r25, r25
 3b6:	6a 95       	dec	r22
 3b8:	e2 f7       	brpl	.-8      	; 0x3b2 <DIO_connect_pullup+0x3a>
 3ba:	80 95       	com	r24
 3bc:	82 23       	and	r24, r18
 3be:	8b bb       	out	0x1b, r24	; 27
 3c0:	08 95       	ret
		}
		break;
		case 'B':
		if (connect==1){
 3c2:	41 30       	cpi	r20, 0x01	; 1
 3c4:	59 f4       	brne	.+22     	; 0x3dc <DIO_connect_pullup+0x64>
			SET_BIT(PORTB,bit);
 3c6:	28 b3       	in	r18, 0x18	; 24
 3c8:	81 e0       	ldi	r24, 0x01	; 1
 3ca:	90 e0       	ldi	r25, 0x00	; 0
 3cc:	02 c0       	rjmp	.+4      	; 0x3d2 <DIO_connect_pullup+0x5a>
 3ce:	88 0f       	add	r24, r24
 3d0:	99 1f       	adc	r25, r25
 3d2:	6a 95       	dec	r22
 3d4:	e2 f7       	brpl	.-8      	; 0x3ce <DIO_connect_pullup+0x56>
 3d6:	82 2b       	or	r24, r18
 3d8:	88 bb       	out	0x18, r24	; 24
 3da:	08 95       	ret
		}
		else{
			CLR_BIT(PORTB,bit);
 3dc:	28 b3       	in	r18, 0x18	; 24
 3de:	81 e0       	ldi	r24, 0x01	; 1
 3e0:	90 e0       	ldi	r25, 0x00	; 0
 3e2:	02 c0       	rjmp	.+4      	; 0x3e8 <DIO_connect_pullup+0x70>
 3e4:	88 0f       	add	r24, r24
 3e6:	99 1f       	adc	r25, r25
 3e8:	6a 95       	dec	r22
 3ea:	e2 f7       	brpl	.-8      	; 0x3e4 <DIO_connect_pullup+0x6c>
 3ec:	80 95       	com	r24
 3ee:	82 23       	and	r24, r18
 3f0:	88 bb       	out	0x18, r24	; 24
 3f2:	08 95       	ret
		}
		break;
		case 'C':
		if (connect==1){
 3f4:	41 30       	cpi	r20, 0x01	; 1
 3f6:	59 f4       	brne	.+22     	; 0x40e <__EEPROM_REGION_LENGTH__+0xe>
			SET_BIT(PORTC,bit);
 3f8:	25 b3       	in	r18, 0x15	; 21
 3fa:	81 e0       	ldi	r24, 0x01	; 1
 3fc:	90 e0       	ldi	r25, 0x00	; 0
 3fe:	02 c0       	rjmp	.+4      	; 0x404 <__EEPROM_REGION_LENGTH__+0x4>
 400:	88 0f       	add	r24, r24
 402:	99 1f       	adc	r25, r25
 404:	6a 95       	dec	r22
 406:	e2 f7       	brpl	.-8      	; 0x400 <__EEPROM_REGION_LENGTH__>
 408:	82 2b       	or	r24, r18
 40a:	85 bb       	out	0x15, r24	; 21
 40c:	08 95       	ret
		}
		else{
			CLR_BIT(PORTC,bit);
 40e:	25 b3       	in	r18, 0x15	; 21
 410:	81 e0       	ldi	r24, 0x01	; 1
 412:	90 e0       	ldi	r25, 0x00	; 0
 414:	02 c0       	rjmp	.+4      	; 0x41a <__EEPROM_REGION_LENGTH__+0x1a>
 416:	88 0f       	add	r24, r24
 418:	99 1f       	adc	r25, r25
 41a:	6a 95       	dec	r22
 41c:	e2 f7       	brpl	.-8      	; 0x416 <__EEPROM_REGION_LENGTH__+0x16>
 41e:	80 95       	com	r24
 420:	82 23       	and	r24, r18
 422:	85 bb       	out	0x15, r24	; 21
 424:	08 95       	ret
		}
		break;
		case 'D':
		if (connect==1){
 426:	41 30       	cpi	r20, 0x01	; 1
 428:	59 f4       	brne	.+22     	; 0x440 <__EEPROM_REGION_LENGTH__+0x40>
			SET_BIT(PORTD,bit);
 42a:	22 b3       	in	r18, 0x12	; 18
 42c:	81 e0       	ldi	r24, 0x01	; 1
 42e:	90 e0       	ldi	r25, 0x00	; 0
 430:	02 c0       	rjmp	.+4      	; 0x436 <__EEPROM_REGION_LENGTH__+0x36>
 432:	88 0f       	add	r24, r24
 434:	99 1f       	adc	r25, r25
 436:	6a 95       	dec	r22
 438:	e2 f7       	brpl	.-8      	; 0x432 <__EEPROM_REGION_LENGTH__+0x32>
 43a:	82 2b       	or	r24, r18
 43c:	82 bb       	out	0x12, r24	; 18
 43e:	08 95       	ret
		}
		else{
			CLR_BIT(PORTD,bit);
 440:	22 b3       	in	r18, 0x12	; 18
 442:	81 e0       	ldi	r24, 0x01	; 1
 444:	90 e0       	ldi	r25, 0x00	; 0
 446:	02 c0       	rjmp	.+4      	; 0x44c <__EEPROM_REGION_LENGTH__+0x4c>
 448:	88 0f       	add	r24, r24
 44a:	99 1f       	adc	r25, r25
 44c:	6a 95       	dec	r22
 44e:	e2 f7       	brpl	.-8      	; 0x448 <__EEPROM_REGION_LENGTH__+0x48>
 450:	80 95       	com	r24
 452:	82 23       	and	r24, r18
 454:	82 bb       	out	0x12, r24	; 18
 456:	08 95       	ret

00000458 <KEYPAD_init>:
 */ 
#include "KEYPAD.h"
#include "DIO.h"

void KEYPAD_init(){
DIO_set_bit_dir(PORT,0,1);
 458:	41 e0       	ldi	r20, 0x01	; 1
 45a:	60 e0       	ldi	r22, 0x00	; 0
 45c:	84 e4       	ldi	r24, 0x44	; 68
 45e:	0e 94 41 00 	call	0x82	; 0x82 <DIO_set_bit_dir>
DIO_set_bit_dir(PORT,1,1);
 462:	41 e0       	ldi	r20, 0x01	; 1
 464:	61 e0       	ldi	r22, 0x01	; 1
 466:	84 e4       	ldi	r24, 0x44	; 68
 468:	0e 94 41 00 	call	0x82	; 0x82 <DIO_set_bit_dir>
DIO_set_bit_dir(PORT,2,1);
 46c:	41 e0       	ldi	r20, 0x01	; 1
 46e:	62 e0       	ldi	r22, 0x02	; 2
 470:	84 e4       	ldi	r24, 0x44	; 68
 472:	0e 94 41 00 	call	0x82	; 0x82 <DIO_set_bit_dir>
DIO_set_bit_dir(PORT,3,1);
 476:	41 e0       	ldi	r20, 0x01	; 1
 478:	63 e0       	ldi	r22, 0x03	; 3
 47a:	84 e4       	ldi	r24, 0x44	; 68
 47c:	0e 94 41 00 	call	0x82	; 0x82 <DIO_set_bit_dir>
DIO_set_bit_dir(PORT,4,0);
 480:	40 e0       	ldi	r20, 0x00	; 0
 482:	64 e0       	ldi	r22, 0x04	; 4
 484:	84 e4       	ldi	r24, 0x44	; 68
 486:	0e 94 41 00 	call	0x82	; 0x82 <DIO_set_bit_dir>
DIO_set_bit_dir(PORT,5,0);
 48a:	40 e0       	ldi	r20, 0x00	; 0
 48c:	65 e0       	ldi	r22, 0x05	; 5
 48e:	84 e4       	ldi	r24, 0x44	; 68
 490:	0e 94 41 00 	call	0x82	; 0x82 <DIO_set_bit_dir>
DIO_set_bit_dir(PORT,6,0);
 494:	40 e0       	ldi	r20, 0x00	; 0
 496:	66 e0       	ldi	r22, 0x06	; 6
 498:	84 e4       	ldi	r24, 0x44	; 68
 49a:	0e 94 41 00 	call	0x82	; 0x82 <DIO_set_bit_dir>
DIO_set_bit_dir(PORT,7,0);	
 49e:	40 e0       	ldi	r20, 0x00	; 0
 4a0:	67 e0       	ldi	r22, 0x07	; 7
 4a2:	84 e4       	ldi	r24, 0x44	; 68
 4a4:	0e 94 41 00 	call	0x82	; 0x82 <DIO_set_bit_dir>
DIO_connect_pullup(PORT,4,1);
 4a8:	41 e0       	ldi	r20, 0x01	; 1
 4aa:	64 e0       	ldi	r22, 0x04	; 4
 4ac:	84 e4       	ldi	r24, 0x44	; 68
 4ae:	0e 94 bc 01 	call	0x378	; 0x378 <DIO_connect_pullup>
DIO_connect_pullup(PORT,5,1);
 4b2:	41 e0       	ldi	r20, 0x01	; 1
 4b4:	65 e0       	ldi	r22, 0x05	; 5
 4b6:	84 e4       	ldi	r24, 0x44	; 68
 4b8:	0e 94 bc 01 	call	0x378	; 0x378 <DIO_connect_pullup>
DIO_connect_pullup(PORT,6,1);
 4bc:	41 e0       	ldi	r20, 0x01	; 1
 4be:	66 e0       	ldi	r22, 0x06	; 6
 4c0:	84 e4       	ldi	r24, 0x44	; 68
 4c2:	0e 94 bc 01 	call	0x378	; 0x378 <DIO_connect_pullup>
DIO_connect_pullup(PORT,7,1);
 4c6:	41 e0       	ldi	r20, 0x01	; 1
 4c8:	67 e0       	ldi	r22, 0x07	; 7
 4ca:	84 e4       	ldi	r24, 0x44	; 68
 4cc:	0e 94 bc 01 	call	0x378	; 0x378 <DIO_connect_pullup>
 4d0:	08 95       	ret

000004d2 <KEYPAD_read>:
	
}
char KEYPAD_read(){
 4d2:	ef 92       	push	r14
 4d4:	ff 92       	push	r15
 4d6:	0f 93       	push	r16
 4d8:	1f 93       	push	r17
 4da:	cf 93       	push	r28
 4dc:	df 93       	push	r29
 4de:	cd b7       	in	r28, 0x3d	; 61
 4e0:	de b7       	in	r29, 0x3e	; 62
 4e2:	60 97       	sbiw	r28, 0x10	; 16
 4e4:	0f b6       	in	r0, 0x3f	; 63
 4e6:	f8 94       	cli
 4e8:	de bf       	out	0x3e, r29	; 62
 4ea:	0f be       	out	0x3f, r0	; 63
 4ec:	cd bf       	out	0x3d, r28	; 61
	char arr[4][4]={{'7','8','9','/'},{'4','5','6','*'},{'1','2','3','-'},{'A','0','=','+'}};
 4ee:	80 e1       	ldi	r24, 0x10	; 16
 4f0:	e0 e6       	ldi	r30, 0x60	; 96
 4f2:	f0 e0       	ldi	r31, 0x00	; 0
 4f4:	de 01       	movw	r26, r28
 4f6:	11 96       	adiw	r26, 0x01	; 1
 4f8:	01 90       	ld	r0, Z+
 4fa:	0d 92       	st	X+, r0
 4fc:	8a 95       	dec	r24
 4fe:	e1 f7       	brne	.-8      	; 0x4f8 <KEYPAD_read+0x26>
	char col,row,x;
	char returnValue= NOTPRESSED;
 500:	ee 24       	eor	r14, r14
 502:	ea 94       	dec	r14
	for(row=0;row<4;row++){
 504:	f1 2c       	mov	r15, r1
 506:	39 c0       	rjmp	.+114    	; 0x57a <KEYPAD_read+0xa8>
		DIO_write_bit(PORT,0,1);
 508:	41 e0       	ldi	r20, 0x01	; 1
 50a:	60 e0       	ldi	r22, 0x00	; 0
 50c:	84 e4       	ldi	r24, 0x44	; 68
 50e:	0e 94 12 01 	call	0x224	; 0x224 <DIO_write_bit>
		DIO_write_bit(PORT,1,1);
 512:	41 e0       	ldi	r20, 0x01	; 1
 514:	61 e0       	ldi	r22, 0x01	; 1
 516:	84 e4       	ldi	r24, 0x44	; 68
 518:	0e 94 12 01 	call	0x224	; 0x224 <DIO_write_bit>
		DIO_write_bit(PORT,2,1);
 51c:	41 e0       	ldi	r20, 0x01	; 1
 51e:	62 e0       	ldi	r22, 0x02	; 2
 520:	84 e4       	ldi	r24, 0x44	; 68
 522:	0e 94 12 01 	call	0x224	; 0x224 <DIO_write_bit>
		DIO_write_bit(PORT,3,1);
 526:	41 e0       	ldi	r20, 0x01	; 1
 528:	63 e0       	ldi	r22, 0x03	; 3
 52a:	84 e4       	ldi	r24, 0x44	; 68
 52c:	0e 94 12 01 	call	0x224	; 0x224 <DIO_write_bit>
		DIO_write_bit(PORT,row,0);
 530:	40 e0       	ldi	r20, 0x00	; 0
 532:	6f 2d       	mov	r22, r15
 534:	84 e4       	ldi	r24, 0x44	; 68
 536:	0e 94 12 01 	call	0x224	; 0x224 <DIO_write_bit>
		for(col=0;col<4;col++){
 53a:	10 e0       	ldi	r17, 0x00	; 0
 53c:	19 c0       	rjmp	.+50     	; 0x570 <KEYPAD_read+0x9e>
			x=DIO_read_bit(PORT,col+4);
 53e:	64 e0       	ldi	r22, 0x04	; 4
 540:	61 0f       	add	r22, r17
 542:	84 e4       	ldi	r24, 0x44	; 68
 544:	0e 94 b1 00 	call	0x162	; 0x162 <DIO_read_bit>
 548:	08 2f       	mov	r16, r24
			if(x==0){
 54a:	81 11       	cpse	r24, r1
 54c:	10 c0       	rjmp	.+32     	; 0x56e <KEYPAD_read+0x9c>
				returnValue=arr[row][col];
 54e:	ef 2d       	mov	r30, r15
 550:	f0 e0       	ldi	r31, 0x00	; 0
 552:	ee 0f       	add	r30, r30
 554:	ff 1f       	adc	r31, r31
 556:	ee 0f       	add	r30, r30
 558:	ff 1f       	adc	r31, r31
 55a:	81 e0       	ldi	r24, 0x01	; 1
 55c:	90 e0       	ldi	r25, 0x00	; 0
 55e:	8c 0f       	add	r24, r28
 560:	9d 1f       	adc	r25, r29
 562:	e8 0f       	add	r30, r24
 564:	f9 1f       	adc	r31, r25
 566:	e1 0f       	add	r30, r17
 568:	f1 1d       	adc	r31, r1
 56a:	e0 80       	ld	r14, Z
				break;
 56c:	03 c0       	rjmp	.+6      	; 0x574 <KEYPAD_read+0xa2>
		DIO_write_bit(PORT,0,1);
		DIO_write_bit(PORT,1,1);
		DIO_write_bit(PORT,2,1);
		DIO_write_bit(PORT,3,1);
		DIO_write_bit(PORT,row,0);
		for(col=0;col<4;col++){
 56e:	1f 5f       	subi	r17, 0xFF	; 255
 570:	14 30       	cpi	r17, 0x04	; 4
 572:	28 f3       	brcs	.-54     	; 0x53e <KEYPAD_read+0x6c>
			if(x==0){
				returnValue=arr[row][col];
				break;
			}
		}
		if(x==0){
 574:	00 23       	and	r16, r16
 576:	21 f0       	breq	.+8      	; 0x580 <KEYPAD_read+0xae>
}
char KEYPAD_read(){
	char arr[4][4]={{'7','8','9','/'},{'4','5','6','*'},{'1','2','3','-'},{'A','0','=','+'}};
	char col,row,x;
	char returnValue= NOTPRESSED;
	for(row=0;row<4;row++){
 578:	f3 94       	inc	r15
 57a:	93 e0       	ldi	r25, 0x03	; 3
 57c:	9f 15       	cp	r25, r15
 57e:	20 f6       	brcc	.-120    	; 0x508 <KEYPAD_read+0x36>
		if(x==0){
			break;
		}		
	}
	return returnValue;
 580:	8e 2d       	mov	r24, r14
 582:	60 96       	adiw	r28, 0x10	; 16
 584:	0f b6       	in	r0, 0x3f	; 63
 586:	f8 94       	cli
 588:	de bf       	out	0x3e, r29	; 62
 58a:	0f be       	out	0x3f, r0	; 63
 58c:	cd bf       	out	0x3d, r28	; 61
 58e:	df 91       	pop	r29
 590:	cf 91       	pop	r28
 592:	1f 91       	pop	r17
 594:	0f 91       	pop	r16
 596:	ff 90       	pop	r15
 598:	ef 90       	pop	r14
 59a:	08 95       	ret

0000059c <LCD_send_falling_edge>:
void LCD_send_string(char* data){
	while((*data) != '\0'){
		LCD_send_char(*data);
		data++;
	}
}
 59c:	41 e0       	ldi	r20, 0x01	; 1
 59e:	60 e0       	ldi	r22, 0x00	; 0
 5a0:	82 e4       	ldi	r24, 0x42	; 66
 5a2:	0e 94 12 01 	call	0x224	; 0x224 <DIO_write_bit>
 5a6:	8f e9       	ldi	r24, 0x9F	; 159
 5a8:	9f e0       	ldi	r25, 0x0F	; 15
 5aa:	01 97       	sbiw	r24, 0x01	; 1
 5ac:	f1 f7       	brne	.-4      	; 0x5aa <LCD_send_falling_edge+0xe>
 5ae:	00 c0       	rjmp	.+0      	; 0x5b0 <LCD_send_falling_edge+0x14>
 5b0:	00 00       	nop
 5b2:	40 e0       	ldi	r20, 0x00	; 0
 5b4:	60 e0       	ldi	r22, 0x00	; 0
 5b6:	82 e4       	ldi	r24, 0x42	; 66
 5b8:	0e 94 12 01 	call	0x224	; 0x224 <DIO_write_bit>
 5bc:	8f e9       	ldi	r24, 0x9F	; 159
 5be:	9f e0       	ldi	r25, 0x0F	; 15
 5c0:	01 97       	sbiw	r24, 0x01	; 1
 5c2:	f1 f7       	brne	.-4      	; 0x5c0 <LCD_send_falling_edge+0x24>
 5c4:	00 c0       	rjmp	.+0      	; 0x5c6 <LCD_send_falling_edge+0x2a>
 5c6:	00 00       	nop
 5c8:	08 95       	ret

000005ca <LCD_send_cmd>:
 5ca:	68 2f       	mov	r22, r24
 5cc:	81 e4       	ldi	r24, 0x41	; 65
 5ce:	0e 94 a9 01 	call	0x352	; 0x352 <DIO_write_port>
 5d2:	40 e0       	ldi	r20, 0x00	; 0
 5d4:	61 e0       	ldi	r22, 0x01	; 1
 5d6:	82 e4       	ldi	r24, 0x42	; 66
 5d8:	0e 94 12 01 	call	0x224	; 0x224 <DIO_write_bit>
 5dc:	0e 94 ce 02 	call	0x59c	; 0x59c <LCD_send_falling_edge>
 5e0:	08 95       	ret

000005e2 <LCD_init>:
 5e2:	2f ef       	ldi	r18, 0xFF	; 255
 5e4:	81 ee       	ldi	r24, 0xE1	; 225
 5e6:	94 e0       	ldi	r25, 0x04	; 4
 5e8:	21 50       	subi	r18, 0x01	; 1
 5ea:	80 40       	sbci	r24, 0x00	; 0
 5ec:	90 40       	sbci	r25, 0x00	; 0
 5ee:	e1 f7       	brne	.-8      	; 0x5e8 <LCD_init+0x6>
 5f0:	00 c0       	rjmp	.+0      	; 0x5f2 <LCD_init+0x10>
 5f2:	00 00       	nop
 5f4:	61 e0       	ldi	r22, 0x01	; 1
 5f6:	81 e4       	ldi	r24, 0x41	; 65
 5f8:	0e 94 82 01 	call	0x304	; 0x304 <DIO_set_port_dir>
 5fc:	41 e0       	ldi	r20, 0x01	; 1
 5fe:	60 e0       	ldi	r22, 0x00	; 0
 600:	82 e4       	ldi	r24, 0x42	; 66
 602:	0e 94 41 00 	call	0x82	; 0x82 <DIO_set_bit_dir>
 606:	41 e0       	ldi	r20, 0x01	; 1
 608:	62 e0       	ldi	r22, 0x02	; 2
 60a:	82 e4       	ldi	r24, 0x42	; 66
 60c:	0e 94 41 00 	call	0x82	; 0x82 <DIO_set_bit_dir>
 610:	41 e0       	ldi	r20, 0x01	; 1
 612:	61 e0       	ldi	r22, 0x01	; 1
 614:	82 e4       	ldi	r24, 0x42	; 66
 616:	0e 94 41 00 	call	0x82	; 0x82 <DIO_set_bit_dir>
 61a:	40 e0       	ldi	r20, 0x00	; 0
 61c:	62 e0       	ldi	r22, 0x02	; 2
 61e:	82 e4       	ldi	r24, 0x42	; 66
 620:	0e 94 12 01 	call	0x224	; 0x224 <DIO_write_bit>
 624:	88 e3       	ldi	r24, 0x38	; 56
 626:	0e 94 e5 02 	call	0x5ca	; 0x5ca <LCD_send_cmd>
 62a:	8f ec       	ldi	r24, 0xCF	; 207
 62c:	97 e0       	ldi	r25, 0x07	; 7
 62e:	01 97       	sbiw	r24, 0x01	; 1
 630:	f1 f7       	brne	.-4      	; 0x62e <LCD_init+0x4c>
 632:	00 c0       	rjmp	.+0      	; 0x634 <LCD_init+0x52>
 634:	00 00       	nop
 636:	8e e0       	ldi	r24, 0x0E	; 14
 638:	0e 94 e5 02 	call	0x5ca	; 0x5ca <LCD_send_cmd>
 63c:	8f ec       	ldi	r24, 0xCF	; 207
 63e:	97 e0       	ldi	r25, 0x07	; 7
 640:	01 97       	sbiw	r24, 0x01	; 1
 642:	f1 f7       	brne	.-4      	; 0x640 <LCD_init+0x5e>
 644:	00 c0       	rjmp	.+0      	; 0x646 <LCD_init+0x64>
 646:	00 00       	nop
 648:	81 e0       	ldi	r24, 0x01	; 1
 64a:	0e 94 e5 02 	call	0x5ca	; 0x5ca <LCD_send_cmd>
 64e:	8f e1       	ldi	r24, 0x1F	; 31
 650:	9e e4       	ldi	r25, 0x4E	; 78
 652:	01 97       	sbiw	r24, 0x01	; 1
 654:	f1 f7       	brne	.-4      	; 0x652 <LCD_init+0x70>
 656:	00 c0       	rjmp	.+0      	; 0x658 <LCD_init+0x76>
 658:	00 00       	nop
 65a:	86 e0       	ldi	r24, 0x06	; 6
 65c:	0e 94 e5 02 	call	0x5ca	; 0x5ca <LCD_send_cmd>
 660:	8f ec       	ldi	r24, 0xCF	; 207
 662:	97 e0       	ldi	r25, 0x07	; 7
 664:	01 97       	sbiw	r24, 0x01	; 1
 666:	f1 f7       	brne	.-4      	; 0x664 <LCD_init+0x82>
 668:	00 c0       	rjmp	.+0      	; 0x66a <LCD_init+0x88>
 66a:	00 00       	nop
 66c:	08 95       	ret

0000066e <LCD_send_char>:
 66e:	68 2f       	mov	r22, r24
 670:	81 e4       	ldi	r24, 0x41	; 65
 672:	0e 94 a9 01 	call	0x352	; 0x352 <DIO_write_port>
 676:	41 e0       	ldi	r20, 0x01	; 1
 678:	61 e0       	ldi	r22, 0x01	; 1
 67a:	82 e4       	ldi	r24, 0x42	; 66
 67c:	0e 94 12 01 	call	0x224	; 0x224 <DIO_write_bit>
 680:	0e 94 ce 02 	call	0x59c	; 0x59c <LCD_send_falling_edge>
 684:	08 95       	ret

00000686 <LCD_clear>:
void LCD_clear(){
	LCD_send_cmd(CLR_SCREEN);
 686:	81 e0       	ldi	r24, 0x01	; 1
 688:	0e 94 e5 02 	call	0x5ca	; 0x5ca <LCD_send_cmd>
	#else
		//round up by default
		__ticks_dc = (uint32_t)(ceil(fabs(__tmp)));
	#endif

	__builtin_avr_delay_cycles(__ticks_dc);
 68c:	8f e1       	ldi	r24, 0x1F	; 31
 68e:	9e e4       	ldi	r25, 0x4E	; 78
 690:	01 97       	sbiw	r24, 0x01	; 1
 692:	f1 f7       	brne	.-4      	; 0x690 <LCD_clear+0xa>
 694:	00 c0       	rjmp	.+0      	; 0x696 <LCD_clear+0x10>
 696:	00 00       	nop
 698:	08 95       	ret

0000069a <main>:
#include <util/delay.h>
#include "LCD.h"
#include "KEYPAD.h"
int main(void)
{
    LCD_init();
 69a:	0e 94 f1 02 	call	0x5e2	; 0x5e2 <LCD_init>
	KEYPAD_init();
 69e:	0e 94 2c 02 	call	0x458	; 0x458 <KEYPAD_init>
	char ch;
    while (1) 
    {
		ch=KEYPAD_read();
 6a2:	0e 94 69 02 	call	0x4d2	; 0x4d2 <KEYPAD_read>
		if(ch!=NOTPRESSED){
 6a6:	8f 3f       	cpi	r24, 0xFF	; 255
 6a8:	e1 f3       	breq	.-8      	; 0x6a2 <main+0x8>
			if (ch =='A')
 6aa:	81 34       	cpi	r24, 0x41	; 65
 6ac:	19 f4       	brne	.+6      	; 0x6b4 <main+0x1a>
			{
				LCD_clear();
 6ae:	0e 94 43 03 	call	0x686	; 0x686 <LCD_clear>
 6b2:	02 c0       	rjmp	.+4      	; 0x6b8 <main+0x1e>
			}
			else
			{
				LCD_send_char(ch);	
 6b4:	0e 94 37 03 	call	0x66e	; 0x66e <LCD_send_char>
 6b8:	2f e7       	ldi	r18, 0x7F	; 127
 6ba:	8a e1       	ldi	r24, 0x1A	; 26
 6bc:	96 e0       	ldi	r25, 0x06	; 6
 6be:	21 50       	subi	r18, 0x01	; 1
 6c0:	80 40       	sbci	r24, 0x00	; 0
 6c2:	90 40       	sbci	r25, 0x00	; 0
 6c4:	e1 f7       	brne	.-8      	; 0x6be <main+0x24>
 6c6:	00 c0       	rjmp	.+0      	; 0x6c8 <main+0x2e>
 6c8:	00 00       	nop
 6ca:	eb cf       	rjmp	.-42     	; 0x6a2 <main+0x8>

000006cc <_exit>:
 6cc:	f8 94       	cli

000006ce <__stop_program>:
 6ce:	ff cf       	rjmp	.-2      	; 0x6ce <__stop_program>
